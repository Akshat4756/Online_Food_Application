@model Models.ViewModel.HomePageViewModel

@{
    ViewData["Title"] = "Foods";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid my-5 py-5">
    <div class="row my-3 mx-2">
        <div class="col-md-12 shadow-rounded">
            <div class="row justify-content-center align-content-center my-2 px-3">
                <div class="col-md-11 rounded-5">
                    <input class="form-control form-control-sm" type="search" role="search" placeholder="Enter the name of food you want to search" />
                </div>
                <div class="col-md-1 ">
                    <a role="button" class="btn btn-sm btn-outline-light" title="search"><i class="fa-solid fa-magnifying-glass"></i></a>
                </div>
            </div>

        </div>
    </div>
    <div class="row my-3">
        <div class="col-md-12 ">
            <button class="btn btn-outline-light" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasWithBothOptions" aria-controls="offcanvasWithBothOptions"><i class="fa-solid fa-filter"></i>&nbsp;Filter</button>

            <div class="offcanvas offcanvas-start text-white" style="background-color:black" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
                <div class="offcanvas-header">
                    <h5 class="row-header" id="offcanvasWisthBothOptionsLabel">Filters</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <div class="accordion accordion-flush" id="accordionFlushExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingOne">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                                    Categories
                                </button>
                            </h2>
                            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                                <ul id="chk_Cat" class="accordion-body text-dark">
                                    @foreach (var categories in Model.Categories)
                                    {
                                        <li class="list-group-item">
                                            <label for="@categories.CatId">@categories.CatName</label>
                                            <input id="@categories.CatId" class="form-check-input" type="checkbox" name="Categories" value="@categories.CatId" />
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                                    Sub-Categories
                                </button>
                            </h2>
                            <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
                                <ul id="check_SubCat" class="accordion-body">
                                    @foreach (var sub in Model.SubCategories)
                                    {
                                        <li class="list-group-item">
                                            <label for="@sub.SubCatid">@sub.SubCatName</label>
                                            <input id="@sub.SubCatid" class="checkbox" type="checkbox" name="Sub Categories" value="@sub.SubCatid" />
                                        </li>
                                    }

                                </ul>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                                    Food Types
                                </button>
                            </h2>
                            <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
                                <ul id="chk_FoodType" class="accordion-body">

                                    @foreach (var foodTypes in Model.FoodTypes)
                                    {
                                        <li class="list-group-item">
                                        <label for="@foodTypes.FoodTypeId">@foodTypes.FoodTypeName</label>
                                        <input id="@foodTypes.FoodTypeId" type="checkbox" name="Food Type" value="@foodTypes.FoodTypeId" />
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <center><a id="btnApply" class="btn btn-sm btn-outline-light my-4"  role="button">Apply Filters</a></center>

                </div>
            </div>
        </div>
        <div class="row" id="FoodRow">
            @Html.Partial("_Food",Model.Food)
        </div>
        
        @*@await Component.InvokeAsync("Food")*@
        @*<div class="row my-3">
            @foreach (var food in Model.Food)
            {
                <div class="col-md-4 col-sm-6 d-flex align-items-stretch">
                    <div class="card my-3">

                        <div class="card-body d-flex flex-column">
                            <img src="data:image/png;base64,@Convert.ToBase64String(food.BannerImage)" class="d-flex card-img img-fluid" />
                            <h3 class="text-center head_Name">
                                @food.FoodName
                            </h3>
                            <p class="text-justify">@food.FoodDesc</p>
                            <div class="col-12 mb-0 mt-auto">

                                <a role="button" class="btn btn-success float-start" title="Buy">Buy Now</a>
                                <a role="button" class="btn btn-warning" title="Details">Details</a>
                                <a role="button" class="btn btn-block btn-danger float-end" title="Add To Cart"><i class="fa-regular fa-heart"></i></a>


                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>*@
    </div>
</div>
<script type="text/javascript">
    var listCat = [];
    var listSubCat=[];
    var listFoodType=[];
    $('#chk_Cat input[type=checkbox]').on('change', function () {
        listCat = [];
        $('#chk_Cat input[type=checkbox]:checked').each(function(){
            listCat.push($(this).val());
        });
        $.ajax({
            url: 'Home/getSubCategoryBasedOnCat',
            data: { list: listCat },
            method: 'POST',
            success: function (data) {
                var size = Object.keys(data).length;

                if (size != 0) {
                    $('#check_SubCat').empty();
                    for (var i = 0; i < size; i++) {
                        let string = '<li class="list-group-item">' +
                            ' <label for="' + data[i].subCatid + '">' + data[i].subCatName + '</label>' +
                            '<input id="' + data[i].subCatid + '"  type="checkbox" name="Sub Categories" value="' + data[i].subCatid + '" />' +
                            ' </li>';

                        $('#check_SubCat').append(string
                        );
                        console.log(data[i]);
                        console.log(string)
                    }

                }
                //else {
                //    $.ajax({
                //        url: '/Foods',
                //        method: 'GET',
                //        success: function (data) {
                //            window.location.reload();
                //            console.log('reloaded');
                //        }
                //    });
                //}
                console.log(data);
            },
            error: function (error) {
                console.log(error);
            }
        });
    console.log('First ' + listCat);
    });
    //$('#chk_Cat').on('change', 'input[type=checkbox]', function () {
    //    listCat=[];
    //    $('input[type=checkbox]:checked').each(function () {
    //        listCat.push($(this).val());
    //    });
    //    console.log('First '+listCat);
    //});
    $('#check_SubCat ').on('change', 'input[type=checkbox]', function () {
        debugger;
        listSubCat = [];
        $('#check_SubCat input[type=checkbox]:checked').each(function (){
            listSubCat.push($(this).val());
        });
        console.log('Subcat is'+listSubCat);
    });
    //$('#check_SubCat').on('change', input[type = checkbox], function () {
    //    listSubCat=[];
    //    $('input[type=checkbox]:checked').each(function () {
    //        listSubCat.push($(this).val());
    //    });
    //    console.log(listSubCat);
    //});
    $('#chk_FoodType input[type=checkbox]').on('change',function () {
        listFoodType = [];
        $('#chk_FoodType input[type=checkbox]:checked').each(function () {
            listFoodType.push($(this).val());
        });
        console.log(listFoodType);
    });
    //$('#chk_FoodType').on('change', 'input[type=checkbox]', function () {
    //    listFoodType=[];
    //    $('input[type=checkbox]:checked').each(function () {
    //        listFoodType.push($(this).val());
    //    });
    //    console.log(listFoodType);
    //});
          
    $('#btnApply').on('click', function () {
       $.ajax({
            url: 'Home/Filter',
method:'POST',
            data: { listCat :listCat,listSubCat:listSubCat,listFoodType:listFoodType},
            success:function(success){
                $('#FoodRow').html(success);
                console.log('Success');
                 //listCat = [];
                 //listSubCat = [];
                 //listFoodType = [];
            },
            error:function(err){
                console.log(err);
                //listCat = [];
                //listSubCat = [];
                //listFoodType = [];
            }

})
    });
    //$('#chk_Cat input[type = checkbox]').on('change', function () {
    //    var all = [];
    //    $('#chk_Cat input[type=checkbox]:checked').each(function () {
    //        all.push($(this).val());
    //    });
    //    console.log('second '+all);
    //    $.ajax({
    //        url: 'Home/getSubCategoryBasedOnCat',
    //        data: { list: all },
    //        method: 'POST',
    //        success: function (data) {
    //            var size = Object.keys(data).length;
                
    //            if (size != 0) {
    //                $('#check_SubCat').empty();
    //                    for (var i = 0; i < size; i++) {
    //                        let string = '<li class="list-group-item">' +
    //                            ' <label for="' + data[i].subCatid + '">' + data[i].subCatName + '</label>' +
    //                            '<input id="' + data[i].subCatid + '" class="checkbox" type="checkbox" name="Sub Categories" value="' + data[i].subCatid + '" />' +
    //                            ' </li>';

    //                        $('#check_SubCat').append(string
    //                        );
    //                        console.log(data[i]);
    //                        console.log(string)
    //                }

    //            } else {
    //                $.ajax({
    //                    url: '/Foods',
    //                    method: 'GET',
    //                    success: function (data) {
    //                        window.location.reload();
    //                        console.log('reloaded');
    //                    }
    //                });
    //            }
    //            console.log(data);},
    //            error: function(error) {
    //                console.log(error);
    //            }
    //        });
    //});

</script>